1-npm init -y to install the package.json

2-install nodemon : - npm i -D nodemon
to run it use :- npm run dev 
and go to package.json and change script to 
 "scripts": {
    "dev": "nodemon server.js"
  },

3-make the env variable by make .env
and install dotenv to access it 
npm install dotenv


####################### at model 
slug :- 

#######################
asyncHandler :-

#######################
pagintation :- 


#######################
how to change error from dev mode to product mode i dont want it to be in detail

####################### 
handle errors outside the express : -
process.on("unhandledRejection",(err)=>{
    console.log(`unhandledRejection ${err.name} || ${err.message}`);
    server.close(()=>{
        console.log("Shutting down .....")
        process.exit(1)
    })
})

#######################
validator:
  ده انا بستخدمه اني لو عندي ايرور مثلا في ال روت مش محتاج استنا لحد مايروح
  للداتا بيز عشان يبين الايرور ده انا بعمل فلديت في الروت الاول 
  exp:-.get(param('id').isMongoId().withMessage("Inavalid Category ID"), انا بعمل ال فلديت هنا rules
(req,res)=>{ middlware ده ال 
    const errors = validationResult(req);
    if(!errors.isEmpty()){
        return res.status(400).json({errors:errors.array()})
    }
    next() انا هنا عملت النكست عشان لو الشرط ده لم اتحقق يروح علي الي بعده
}
,getCategory)


const router = express.Router({mergeParams: true});
بيستخدم في حاله ال nested route 
mergeParams: true to make access to all routes from another place